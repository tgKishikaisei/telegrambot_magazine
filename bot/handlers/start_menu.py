import os
from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from bot.bot_instance import bot

router = Router()

@router.message(Command(commands=["start", "menu"]))
async def start_menu(message: types.Message):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥"),
                KeyboardButton(text="üîé –ü–æ–∏—Å–∫")
            ],
            [
                KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞"),
                KeyboardButton(text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
            ],
            [
                KeyboardButton(text="‚ÑπÔ∏è –ò–Ω—Ñ–æ –æ –¥–æ—Å—Ç–∞–≤–∫–µ")
            ]
        ],
        resize_keyboard=True
    )
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!", reply_markup=kb)

@router.message(Command(commands=["help"]))
async def help_command(message: types.Message):
    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start, /menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "üîé –ü–æ–∏—Å–∫ - –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞\n"
        "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥ - –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤\n"
        "üõí –ö–æ—Ä–∑–∏–Ω–∞ - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã\n"
        "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç - –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤\n"
        "‚ÑπÔ∏è –ò–Ω—Ñ–æ –æ –¥–æ—Å—Ç–∞–≤–∫–µ - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ\n"
        "–¢–∞–∫–∂–µ, –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã."
    )
    await message.answer(help_text)

@router.message(Command(commands=["cancel"]))
async def cancel_order(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
        return
    await state.clear()
    await message.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    await start_menu(message)

@router.message(lambda message: message.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ –æ –¥–æ—Å—Ç–∞–≤–∫–µ")
async def info(message: types.Message):
    text = (
        "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ:\n\n"
        "üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–µ.\n"
        "‚è≥ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 3-7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.\n"
        "üìû –ö–æ–Ω—Ç–∞–∫—Ç: +7 999 123-45-67\n"
        "üìß Email: info@shop.com"
    )
    await message.answer(text)
