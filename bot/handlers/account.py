from aiogram import Router, types
from aiogram.filters import Command
from sqlalchemy import select
from bot.database.session import get_session
from bot.models import User, Order

router = Router()

@router.message(lambda message: message.text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def personal_account(message: types.Message):
    telegram_id = message.from_user.id
    async with get_session() as session:
        stmt_user = select(User).where(User.telegram_id == telegram_id)
        result_user = await session.execute(stmt_user)
        db_user = result_user.scalar_one_or_none()

        if not db_user:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
            return

        stmt_orders = select(Order).where(Order.user_id == db_user.id)
        result_orders = await session.execute(stmt_orders)
        orders_list = result_orders.scalars().all()

        if not orders_list:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
            return

        text = "üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤:\n"
        for order in orders_list:
            text += f"–ó–∞–∫–∞–∑ #{order.id}: {order.status} –Ω–∞ —Å—É–º–º—É {order.total} —Ä—É–±.\n"

        await message.answer(text)

@router.message(Command(commands=["orderstatus"]))
async def order_status(message: types.Message):
    telegram_id = message.from_user.id
    async with get_session() as session:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stmt_user = select(User).where(User.telegram_id == telegram_id)
        result = await session.execute(stmt_user)
        db_user = result.scalar_one_or_none()
        if not db_user:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
            return
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑
        stmt_order = select(Order).where(Order.user_id == db_user.id).order_by(Order.id.desc())
        result_order = await session.execute(stmt_order)
        last_order = result_order.scalar_one_or_none()
        if not last_order:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
        else:
            await message.answer(
                f"–í–∞—à –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ #{last_order.id}:\n–°—Ç–∞—Ç—É—Å: {last_order.status}\n–°—É–º–º–∞: {last_order.total} —Ä—É–±."
            )
